{
  "name": "imap-server",
  "version": "0.0.1",
  "description": "IMAP Server module for Nodejs",
  "main": "index.js",
  "author": {
    "name": "Jean-SÃ©bastien Tremblay",
    "email": "jeansebtr@xpensia.com",
    "url": "http://blog.jeansebtr.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/xpensia/ImapServer.git"
  },
  "keywords": [
    "imap",
    "server",
    "email"
  ],
  "license": "MIT",
  "dependencies": {
    "imap-parser": ">= 0.0.1"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "readme": "# imap-server\n\nIMAP Server module for Nodejs\n\nThis project is inspired by [Haraka](http://haraka.github.io/) a SMTP server for Nodejs.\nAll features of an IMAP server are implemented as plugins, so it can adapt to many use cases.\n\n## Installation\n\n```sh\nnpm install imap-server\n```\n\n## Usage\n\n```javascript\nvar ImapServer = require('imap-server');\nvar server = ImapServer();\n\n// use plugin\nvar plugins = require('imap-server/plugins');\nserver.use(plugins.announce);\n/* use more builtin or custom plugins... */\n\nvar net = require('net');\nnet.createServer(server).listen(process.env.IMAP_PORT || 143);\n```\n\n## Plugins\n\n### Built-in plugins\n\n#### announce\n\nRequired by [IMAP4rev1][imap]. This plugin also send the optional capability list.\n\n#### starttls\n\nProvide encrypted communication for IMAP via the [STARTTLS][starttls] command.\n\n```javascript\nserver.use(plugins.starttls, {\n    /* mandatory hash of options for crypto.createCredentials\n     * http://nodejs.org/api/crypto.html#crypto_crypto_createcredentials_details\n     * with at least key & cert\n     */\n    key: Buffer,\n    cert: Buffer\n});\n```\n\n#### debug\n\nThis plugin log various information.\n\n### authentification helper\n\nHere's how to implement auth plain without worrying about the underlying protocol:\n```javascript\nvar WrapAuthPlain = require('imap-server/util/auth_plain_wrapper');\n\nexports.auth_plain = WrapAuthPlain(function(connection, username, password, next) {\n    if(username == \"john.doe@example.com\" && password == \"foobar\") {\n        next(null, 'OK');\n    }\n    else {\n        next(null, 'NO');\n    }\n});\n```\n\n## Notes\n\n* Default port : 143\n* SSL port : 993\n* rfc3501 (IMAP4rev1) : http://tools.ietf.org/html/rfc3501\n* return flags : OK, NO, BAD\n\n* getCapabilities ( connection ) Sync, return [cap, ...]\n* register\n* connection ( connection, next )\n* starttls ( next )\n* auth_* ( next )\n* unknown_command ( connection, line, next )\n\n\n[imap]: http://tools.ietf.org/html/rfc3501 \"RFC 3501\"\n[starttls]: http://tools.ietf.org/html/rfc2595 \"RFC 2595\"\n[sasl-ir]: http://tools.ietf.org/html/rfc4959 \"RFC 4959\"\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/xpensia/ImapServer/issues"
  },
  "homepage": "https://github.com/xpensia/ImapServer",
  "_id": "imap-server@0.0.1",
  "dist": {
    "shasum": "e262224df3c25564c788fd4766c378bfd0c5e52f"
  },
  "_from": "imap-server@*",
  "_resolved": "https://registry.npmjs.org/imap-server/-/imap-server-0.0.1.tgz"
}
