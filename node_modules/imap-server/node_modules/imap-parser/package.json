{
  "name": "imap-parser",
  "version": "0.0.1",
  "description": "A parser for IMAP line based commands",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hashmail/imap-parser.git"
  },
  "keywords": [
    "IMAP",
    "email",
    "e-mail",
    "server",
    "client"
  ],
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.9.0"
  },
  "dependencies": {
    "readable-stream": "~1.0.2"
  },
  "readme": "# imap-parser\r\n\r\nIMAP command parser for use on both client and server.  This is based on work in [andris9/inbox](https://github.com/andris9/inbox) and provides a parser for IMAP line based commands.\r\n\r\n[![Build Status](https://travis-ci.org/hashmail/imap-parser.png?branch=master)](https://travis-ci.org/hashmail/imap-parser)\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install imap-parser\r\n```\r\n\r\n## API\r\n\r\nTo create an instance of the line parser:\r\n\r\n```js\r\nvar Parser = require('imap-parser')\r\nvar parser = new Parser()\r\n```\r\n\r\nThe parser is a writable & readable stream.  Just pipe the data stream from the TCP connection in and read the parsed lines out as `data` events.  Each data event contains an array with the parsed data for a line.  String literals are also handled more or less automatically (see caviat in events).\r\n\r\n### Events\r\n\r\n#### log\r\n\r\nIs emitted with a string as its data.  This string is the entire unparsed content of the line.  It is useful for logging:\r\n\r\n```js\r\nparser.on('log', function (line) {\r\n  console.log('c: ' + line)\r\n})\r\n```\r\n\r\n#### literal\r\n\r\nIs emitted when the client is sending a literal to the server but is waiting for a command continuation request:\r\n\r\n```js\r\nparser.on('literal', function () {\r\n  connection.write('+ Ready for additional command text')\r\n})\r\n```\r\n\r\n## Licence\r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hashmail/imap-parser/issues"
  },
  "homepage": "https://github.com/hashmail/imap-parser",
  "_id": "imap-parser@0.0.1",
  "dist": {
    "shasum": "c35d1a853914e7cc60b32d25827a24c0b19fede1"
  },
  "_from": "imap-parser@>= 0.0.1",
  "_resolved": "https://registry.npmjs.org/imap-parser/-/imap-parser-0.0.1.tgz"
}
